@using DietPreparation.Common.Consts
@using DietPreparation.Common.Enums
@using DietPreparation.Common.Extensions
@using DietPreparation.Resources
@using DietPreparation.Web.Models.FeedLabels
@model FeedLabelsSearchViewModel

@{
	var title = Model.Type == FeedLabelsType.Open
		? $"{ContentResources.ProcessWorkOrder} {ContentResources.Label} {ContentResources.Printing}"
		: $"{ContentResources.ProcessWorkOrder} {ContentResources.Label} {ContentResources.Reprinting}";

	ViewBag.Title = title;
	var orderBy = new FeedLabelListItemViewModel();
}

<div class="container">
	@await Html.PartialAsync("_PageHeaderPartial", title)
	@await Html.PartialAsync("../Shared/FilterYearInfo")
	<div class="accordion pb-4" id="accordionPanelsStayOpenExample">
		<div class="accordion-item">
			<h2 class="accordion-header" id="panelsStayOpen-headingOne">
				<button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseOne" aria-expanded="true" aria-controls="panelsStayOpen-collapseOne">
					@ContentResources.Search
				</button>
			</h2>
			<div id="panelsStayOpen-collapseOne" class="px-2 accordion-collapse collapse show" aria-labelledby="panelsStayOpen-headingOne">
				<section class="search-panel">
					@Html.HiddenFor(x => x.Type, new { filter = "filter" })
					<div class="row pt-3">
						<div class="col-md-1">
							<label class="col-form-label">@ContentResources.Lot @ContentResources.Year</label>
						</div>
						<div class="col-md-2">
							@Html.TextBoxFor(x => x.LotYear, new { @class = "form-control", filter = "filter", placeholder = ContentResources.LotYear, id = "filter-lot-year" })
						</div>
						<div class="col-md-1">
							<label class="col-form-label">@ContentResources.Requestor</label>
						</div>
						<div class="col-md-5">
							@Html.TextBoxFor(x => x.Requestor, new { @class = "form-control", filter = "filter", placeholder = ContentResources.Requestor })
						</div>
					</div>
					<div class="row pt-3 pb-2">
						<div class="col-md-1">
							<label class="col-form-label">@ContentResources.Lot #</label>
						</div>
						<div class="col-md-2">
							@Html.TextBoxFor(x => x.LotId, new { @class = "form-control", filter = "filter", placeholder = $"{ContentResources.Lot} #", id = "filter-lot-number" })
						</div>
						<div class="col-md-1">
							<label class="col-form-label">@ContentResources.DietName</label>
						</div>
						<div class="col-md-5">
							@Html.TextBoxFor(x => x.DietName, new { @class = "form-control", filter = "filter", placeholder = ContentResources.DietName })
						</div>
						<div class="col-md-2 offset-md-1">
							<button type="button" class="btn btn-primary search-button">@ContentResources.Search</button>
						</div>
					</div>
				</section>
			</div>
		</div>
	</div>

	<section class="sortable-block pagination-block mt-2">
		<table>
			<thead>
			<tr>
				<th class="col-1 active-desc" data-sort-by="@(orderBy.GetFullName(x => x.Lot))">@ContentResources.Lot</th>
				<th class="col-2" data-sort-by="@(orderBy.GetFullName(x => x.Requestor))">@ContentResources.Requestor</th>
				<th class="col-1" data-sort-by="@(orderBy.GetFullName(x => x.DateRequest))">@ContentResources.DateOfRequest</th>
				<th class="col-5" data-sort-by="@(orderBy.GetFullName(x => x.DietName))">@ContentResources.DietName</th>
				<th class="col-1" data-sort-by="@(orderBy.GetFullName(x => x.RequestAmount))">@ContentResources.Amount</th>
				<th class="col-1" data-sort-by="@(orderBy.GetFullName(x => x.UnitOfMeasure))">@ContentResources.UnitOfMeasure</th>
				<th class="col-1">&nbsp;</th>
			</tr>
			</thead>
			<tbody>

			</tbody>
			<tfoot>
				<tr>
					<td colspan="7" class="pagination-panel">
						<nav>
							<ul class="pagination justify-content-center"></ul>
						</nav>
					</td>
				</tr>
			</tfoot>
		</table>
	</section>

</div>

@section Scripts {
	<script type="module">
		import errorMessages from '@Url.Content("~/scripts/common/error-messages.js")';
		import TableManager from '@Url.Content("~/scripts/components/table-manager.js")';
		import InputPairedField from '@Url.Content("~/scripts/components/input-paired-field.js")';
		import DisplayAlert from '@Url.Content("~/scripts/display-alert.js")';
		const displayAlert = new DisplayAlert('@DefaultNumbers.DefaultAlertsTimeoutInMs');

		function handleException(exception) {
			displayAlert.exception(exception);
		};

		function fillTable(data) {
			const type = '@Model.Type';
			let $data = $('.sortable-block table tbody')
			$data.find('tr').remove();

			if (data.feedLabels && data.feedLabels.length > 0) {
				$.each(data.feedLabels, function (index, item) {
					var row = $('<tr>');
					row.attr('data-id', item.id);
					row.addClass('request-row');
					row.append('<td class="sm">' + item.lot + '</td>');
					row.append('<td class="md">' + item.requestor + '</td>');
					row.append('<td class="sm">' + item.dateRequest + '</td>');
					row.append('<td class="md align-middle"><p class="text-wrap mb-0">' + item.dietName + '</p></td>');
					row.append('<td class="lg">' + item.requestAmount.toLocaleString() + '</td>');
					row.append('<td class="sm">' + item.unitOfMeasure + '</td>');
					row.append(`<td class="sm"><a class="request-row float-end" href="@Url.Action("BatchList","FeedLabels")?requestId=${item.id}&type=${type}"><i data-feather="edit"></i></a></td>`);
					$data.append(row);
				});
			} else {
				var row = $('<tr>');
				row.append(`<td colspan="7" align="center" class="lg">@(MessagesResources.EmptyEntityInstancesList)</td>`);
				$data.append(row);
			}

			feather.replace();
		};

		$(document).on('click', '.request-row', function () {
			const id = $(this).data('id');
			const type = '@Model.Type';
			window.location.href = '@Url.Action("BatchList", "FeedLabels")' + `?requestId=${id}&type=${type}`;
		});

		$(document).ready(function () {
			const inputPairedField = new InputPairedField('filter-lot-year', 'filter-lot-number');

			var tableManager = new TableManager(['sortable-table', 'pagination', 'search-panel'], '@Url.Action("Search", "FeedLabels")', fillTable, handleException, feather);
			tableManager.loadData();
		});
	</script>
}