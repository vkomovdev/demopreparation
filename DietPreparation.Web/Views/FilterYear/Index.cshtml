@using DietPreparation.Resources
@using DietPreparation.Common.Consts
@model FilterYearViewModel

@{
	ViewBag.Title = $"{ContentResources.FilteringYear}";
}

<div class="container">
	@await Html.PartialAsync("_PageHeaderPartial", $"{ContentResources.FilteringYear}")
	@using (Html.BeginForm("Create", "FilterYear", FormMethod.Post))
	{
		<section class="row mt-4">
			@Html.AntiForgeryToken()
			<div class="form-group">
				<div class="row">
					<div class="col-md-8 col-lg-6 offset-md-2 offset-lg-3 alert alert-light mt-2" role="alert">
						@ContentResources.FilteringYearMessage
					</div>
				</div>
			</div>
			<div class="form-group">
				<div class="row">
					<div class="col-md-3 col-lg-2 offset-md-2 offset-lg-3">
						@Html.LabelFor(x => x.Year, ContentResources.Year, new { @class = "control-label required" })
					</div>
					<div class="col-md-5 col-lg-4">
						@Html.TextBoxFor(x => x.Year, new { @class = "form-control", maxlength = FieldLengthes.Small, required = "required" })
					</div>
				</div>
			</div>
		</section>
		<section class="row button-panel">
			<div class="form-group">
				<div class="row">
					<div class="col-md-4 col-lg-3 offset-md-6 offset-lg-6">
						<button type="submit" class="btn btn-primary mt-md-0 mt-2">@ContentResources.Save</button>
					</div>
				</div>
			</div>
		</section>
	}
</div>

@section Scripts {
	<script type="module">
		import api from '@Url.Content("~/scripts/axios-wrapper.js")';
		import DisplayAlert from '@Url.Content("~/scripts/display-alert.js")';
		import overlay from '@Url.Content("~/scripts/overlay/overlay-hider-wrapper.js")';
		import modal from '@Url.Content("~/scripts/Modal/modal-wrapper.js")';
		var displayAlert = new DisplayAlert('@DefaultNumbers.DefaultAlertsTimeoutInMs');

		$("form").on("submit", function (event) {
			event.preventDefault();

			const formData = new FormData(this);
			const viewModel = {
				Year: formData.get('Year')
			};

			overlay.show();
			api.post('@Url.Action("Create", "FilterYear")', viewModel, {
				headers: {
					"Content-Type": "application/json"
				}
			})
				.then((data) => {
					modal.setTextTitle('@ContentResources.FilteringYear');
					modal.setTextBody('@MessagesResources.FilterYearUpdated');
					modal.setContinueButton('@ContentResources.Ok', '@Url.Action("Index", "FilterYear")');
					modal.open();
					overlay.hide();
				})
				.catch((exception) => {
					displayAlert.exception(exception);
					overlay.hide();
				});
		});
	</script>
}