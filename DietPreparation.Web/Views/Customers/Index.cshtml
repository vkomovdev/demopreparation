@using DietPreparation.Common.Consts
@using DietPreparation.Common.Enums
@using DietPreparation.Web.Models.Customers;
@using DietPreparation.Web.Models.Users
@using DietPreparation.Common.Extensions
@using DietPreparation.Resources

@{
	ViewBag.Title = ContentResources.Users;
	var orderBy = new CustomerViewModel();
}

<div class="container">
	@await Html.PartialAsync("_PageHeaderPartial", $"{ContentResources.Customer} {ContentResources.AccessControls}")
	<section class="sortable-block mt-3">
		<table>
			<thead>
				<tr>
					<th class="col-1" data-sort-by="@(orderBy.GetFullName(x => x.Id))">@ContentResources.CustomerIdLabel</th>
					<th class="col-2 active-asc" data-sort-by="@(orderBy.GetFullName(x => x.FirstName))">@ContentResources.FirstName</th>
					<th class="col-1" data-sort-by="@(orderBy.GetFullName(x => x.MiddleName))">@ContentResources.Initial</th>
					<th class="col-2" data-sort-by="@(orderBy.GetFullName(x => x.LastName))">@ContentResources.LastName</th>
					<th class="col-2" data-sort-by="@(orderBy.GetFullName(x => x.Email))">@ContentResources.Email</th>
					<th class="col-2" data-sort-by="@(orderBy.GetFullName(x => x.CustomerType))">@ContentResources.CustomerType</th>
					<th class="col-1" data-sort-by="@(orderBy.GetFullName(x => x.Building))">@ContentResources.Building</th>
					<th class="col-1" data-sort-by="@(orderBy.GetFullName(x => x.BusinessUnit))">@ContentResources.BusinessUnit</th>
					<th class="col-1">
						<a class="request-row float-end" href="@Url.Action("Create","Customers")"><i data-feather="plus-square"></i></a>
					</th>
				</tr>
			</thead>
			<tbody>
			</tbody>
			<tfoot>
				<tr>
					<td colspan="9" class="pagination-panel">
						<nav>
							<ul class="pagination justify-content-center"></ul>
						</nav>
					</td>
				</tr>
			</tfoot>
		</table>
	</section>
</div>

@section Scripts {
	<script type="module">
		import errorMessages from '@Url.Content("~/scripts/common/error-messages.js")';
		import TableManager from '@Url.Content("~/scripts/components/table-manager.js")';
		import DisplayAlert from '@Url.Content("~/scripts/display-alert.js")';
		const displayAlert = new DisplayAlert('@DefaultNumbers.DefaultAlertsTimeoutInMs');

		function handleException(exception) {
			displayAlert.exception(exception);
		};

		function fillTable(data) {
			let $data = $('.sortable-block table tbody')
			$data.find('tr').remove();

			if (data.customers && data.customers.length > 0) {
				$.each(data.customers, function (index, item) {
					let row = $('<tr>');
					row.attr('data-id', item.encodedCustomerId);
					row.addClass('request-row');
					row.append('<td class="sm">' + item.encodedCustomerId + '</td>');
					row.append('<td class="md">' + item.firstName + '</td>');
					row.append('<td class="sm">' + item.middleName + '</td>');
					row.append('<td class="md">' + item.lastName + '</td>');
					row.append(`<td class="lg"><a href="mailto:${item.email}" class="passive-link">${item.email}</a></td>`);
					row.append(`<td class="sm">${item.customerType}</td>`);
					row.append(`<td class="sm">${item.building}</td>`);
					row.append(`<td class="sm">${item.businessUnit}</td>`);
					row.append(`<td><a class="request-row float-end" href="@Url.Action("Edit","Customers")?encodedId=${item.encodedCustomerId}"><i data-feather="edit"></i></a></td>`);
					$data.append(row);
				});
			} else {
				var row = $('<tr>');
				row.append(`<td colspan="7" align="center" class="lg">@(MessagesResources.EmptyEntityInstancesList)</td>`);
				$data.append(row);
			}

			feather.replace();
		};

		$(document).on('click', '.request-row', function () {
			const id = $(this).data('id')
			window.location.href = '@Url.Action("Edit", "Customers")' + `?encodedId=${id}`;
		});

		$(document).ready(function () {
			const tableManager = new TableManager(['sortable-table', 'pagination'], '@Url.Action("Search", "Customers")', fillTable, handleException, feather);
			tableManager.loadData();
		});
	</script>
}