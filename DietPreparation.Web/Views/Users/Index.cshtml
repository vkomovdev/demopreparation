@using DietPreparation.Common.Consts
@using DietPreparation.Common.Enums
@using DietPreparation.Web.Models.Users
@using DietPreparation.Common.Extensions
@using DietPreparation.Resources

@{
	ViewBag.Title = ContentResources.Users;
	var orderBy = new UserViewModel();
}

<div class="container">
	@await Html.PartialAsync("_PageHeaderPartial", $"{ContentResources.User} {ContentResources.AccessControls}")
	<section class="sortable-block mt-3">
		<table>
			<thead>
				<tr>
					<th class="col-1 active-asc" data-sort-by="@(orderBy.GetFullName(x => x.UserId))">@ContentResources.UserIdLabel</th>
					<th class="col-2" data-sort-by="@(orderBy.GetFullName(x => x.FirstName))">@ContentResources.FirstName</th>
					<th class="col-2" data-sort-by="@(orderBy.GetFullName(x => x.MiddleName))">@ContentResources.MiddleName</th>
					<th class="col-2" data-sort-by="@(orderBy.GetFullName(x => x.LastName))">@ContentResources.LastName</th>
					<th class="col-3" data-sort-by="@(orderBy.GetFullName(x => x.Email))">@ContentResources.Email</th>
					<th class="col-1" data-sort-by="@(orderBy.GetFullName(x => x.AccessType))">@ContentResources.AccessTypeLabel</th>
					<th class="col-1">
						<a class="request-row float-end" href="@Url.Action("Create","Users")"><i data-feather="plus-square"></i></a>
					</th>
				</tr>
			</thead>
			<tbody>
			</tbody>
		</table>
	</section>
</div>

@section Scripts {
	<script type="module">
		import errorMessages from '@Url.Content("~/scripts/common/error-messages.js")';
		import TableManager from '@Url.Content("~/scripts/components/table-manager.js")';
		import DisplayAlert from '@Url.Content("~/scripts/display-alert.js")';
		const displayAlert = new DisplayAlert('@DefaultNumbers.DefaultAlertsTimeoutInMs');

		function handleException(exception) {
			displayAlert.exception(exception);
		};

		function getAccessTypeColorClass(accessTypeNumber) {
			switch (accessTypeNumber) {
				case @AccessType.Disabled.GetNumberAsString():
					return 'text-danger';
				case @AccessType.OrderOnly.GetNumberAsString():
					return 'text-warning';
				case @AccessType.Admin.GetNumberAsString():
					return 'text-success';
			}
		};

		function fillTable(data) {
			let $data = $('.sortable-block table tbody')
			$data.find('tr').remove();

			if (data.users && data.users.length > 0) {
				$.each(data.users, function (index, item) {
					const accessTypeClass = getAccessTypeColorClass(item.accessTypeNumber);
					let row = $('<tr>');
					row.attr('data-id', item.encodedUserId);
					row.addClass('request-row');
					row.append('<td class="sm">' + item.userId + '</td>');
					row.append('<td class="md"><p class="text-wrap">' + item.firstName + '</p></td>');
					row.append('<td class="sm"><p class="text-wrap">' + item.middleName + '</p></td>');
					row.append('<td class="md"><p class="text-wrap">' + item.lastName + '</p></td>');
					row.append(`<td class="lg"><a href="mailto:${item.email}" class="passive-link">${item.email}</a></td>`);
					row.append(`<td class="sm${accessTypeClass ? ' ' + accessTypeClass : ''}">${item.accessTypeLevel}</td>`);
					row.append(`<td><a class="request-row float-end" href="@Url.Action("Edit","Users")?encodedId=${item.encodedUserId}"><i data-feather="edit"></i></a></td>`);
					$data.append(row);
				});
			} else {
				var row = $('<tr>');
				row.append(`<td colspan="7" align="center" class="lg">@(MessagesResources.EmptyEntityInstancesList)</td>`);
				$data.append(row);
			}

			feather.replace();
		};

		$(document).on('click', '.request-row', function () {
			const id = $(this).data('id')
			window.location.href = '@Url.Action("Edit", "Users")' + `?encodedId=${id}`;
		});

		$(document).ready(function () {
			const tableManager = new TableManager(['sortable-table'], '@Url.Action("Search", "Users")', fillTable, handleException, feather);
			tableManager.loadData();
		});
	</script>
}