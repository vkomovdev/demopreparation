@using DietPreparation.Common.Consts
@using DietPreparation.Resources
@model DietPreparation.Web.Models.FeedStuffs.FeedStuffViewModel

@{
	ViewBag.Title = $"{ContentResources.Create} {ContentResources.Feedstuff}";
}

<div class="container">
	@await Html.PartialAsync("_PageHeaderPartial", $"{ContentResources.Create} {ContentResources.Feedstuff}")
	@using (Html.BeginForm("Create", "FeedStuffs", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
	{
		<section class="row mt-4">
			@await Html.PartialAsync("_FeedStuffPartial", Model)
		</section>
		<section class="row button-panel">
			@await Html.PartialAsync("_FeedStuffButtonsPartial", ContentResources.Create)
		</section>
	}
</div>

@section Scripts {
	<script type="module">
		import errorMessages from '@Url.Content("~/scripts/common/error-messages.js")';
		import api from '@Url.Content("~/scripts/axios-wrapper.js")';
		import FormValidator from '@Url.Content("~/scripts/client-validator.js")';
		import DisplayAlert from '@Url.Content("~/scripts/display-alert.js")';
		import overlay from '@Url.Content("~/scripts/overlay/overlay-hider-wrapper.js")';
		import modal from '@Url.Content("~/scripts/Modal/modal-wrapper.js")';
		var displayAlert = new DisplayAlert('@DefaultNumbers.DefaultAlertsTimeoutInMs');

		$("form").on("submit", function (event) {
			event.preventDefault();

			if (!this.checkValidity()) {
				displayAlert.warning(errorMessages.form.invalidData);
				return false;
			}

			const formData = new FormData(this);
			const viewModel = {
				Name: formData.get('Name')
			};

			overlay.show();
			api.post('@Url.Action("Create", "FeedStuffs")', viewModel, {
				headers: {
					"Content-Type": "application/json"
				}
			})
			.then((data) => {
				modal.setTextTitle('@ContentResources.Feedstuff');
				modal.setTextBody('@MessagesResources.IngredientCreated');
				modal.setContinueButton('@ContentResources.Ok', '@Url.Action("Index", "FeedStuffs")');
				modal.open();
				overlay.hide();
			})
			.catch((exception) => {
				displayAlert.exception(exception);
				overlay.hide();
			});
		});
			
		$(document).ready(function () {
			var validator = new FormValidator('.needs-validation');
			validator.setup();
		});
	</script>
}