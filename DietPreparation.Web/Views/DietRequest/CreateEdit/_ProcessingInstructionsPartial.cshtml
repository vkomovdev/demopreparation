@using DietPreparation.Common.Enums;
@using DietPreparation.Common.Consts;
@using DietPreparation.Common.Extensions;
@using DietPreparation.Resources;

@model DietPreparation.Web.Models.DietRequests.EditDietRequestViewModel

@{
	var unitOfMeasureArray = new[] { UnitOfMeasure.Gram, UnitOfMeasure.Kilogram, UnitOfMeasure.Pound };
	var unitOfMeasureInSelectList = unitOfMeasureArray
		.Select(x => new SelectListItem
		{
			Text = x.GetDisplayName(),
			Value = x.GetNumberAsString()
		});

	var formArray = new[] { Form.Meal, Form.Pellet, Form.Liquid, Form.Crumbles };
	var fromInSelectList = formArray
		.Select(x => new SelectListItem
		{
			Text = x.GetDisplayName(),
			Value = x.GetNumberAsString()
		});

	var hazardTypeArray = new[] { HazardType.Known, HazardType.Unknown, HazardType.Nonhazardous };
	var hazardTypeInSelectList = hazardTypeArray
		.Select(x => new SelectListItem
		{
			Text = x.GetDisplayName(),
			Value = x.GetNumberAsString()
		});
}

<h4>@ContentResources.ProcessingInstructions</h4>
<div class="row">
	<div class="col-md-2 mt-2 mt-md-0">
		@Html.LabelFor(x => x.RequestAmount, ContentResources.AmountRequested, new { @class = "col-form-label required" })
	</div>
	<div class="col-md-4">
		@Html.TextBoxFor(
			x => x.RequestAmount,
			new {
				@class = "form-control",
				required = "required",
				type = "number",
				step = "0.001",
				min =  DefaultNumbers.AmountMinValue,
				max = DefaultNumbers.AmountMaxValue,
				title = $"Format: Value should be between {DefaultNumbers.AmountMinValue} and {DefaultNumbers.AmountMaxValue}"
			})
	</div>
	<div class="col-md-2 mt-2 mt-md-0">
		@Html.LabelFor(x => x.UnitOfMeasure, ContentResources.UnitOfMeasure, new { @class = "col-form-label required" })
	</div>
	<div class="col-md-4">
		@Html.DropDownListFor(x => x.UnitOfMeasure,
			unitOfMeasureInSelectList,
			ContentResources.SectionOne,
			new { @class = "form-select", required = "required" })
	</div>
</div>
<div class="row">
	<div class="col-md-2 mt-2 mt-md-0">
		@Html.LabelFor(x => x.Form, ContentResources.Form, new { @class = "col-form-label required" })
	</div>
	<div class="col-md-4">
		@Html.DropDownListFor(x => x.Form,
			fromInSelectList,
			ContentResources.SectionOne,
			new { @class = "form-select", required = "required" })
	</div>
	<div class="col-md-2 mt-2 mt-md-0">
		@Html.LabelFor(x => x.ControlledSubstance, ContentResources.ControlledSubstance, new { @class = "form-check-label" })
	</div>
	<div class="col-md-4">
		<div class="form-check form-check-inline">
			@Html.RadioButtonFor(x => x.ControlledSubstance, true, new { @class = "form-check-input", id = "ControlledSubstanceYes" })
			@Html.Label(ContentResources.Yes, ContentResources.Yes, new { @class = "form-check-label", @for = "ControlledSubstanceYes" })
		</div>
		<div class="form-check form-check-inline">
			@Html.RadioButtonFor(x => x.ControlledSubstance, false, new { @class = "form-check-input", id = "ControlledSubstanceNo" })
			@Html.Label(ContentResources.No, ContentResources.No, new { @class = "form-check-label", @for = "ControlledSubstanceNo" })
		</div>
	</div>
</div>
<div class="row">
	<div class="col-md-2 mt-2 mt-md-0">
		@Html.LabelFor(x => x.ToxicHazard, ContentResources.ToxicHazard, new { @class = "col-form-label required" })
	</div>
	<div class="col-md-4">
		@Html.DropDownListFor(x => x.ToxicHazard,
			hazardTypeInSelectList,
			ContentResources.SectionOne,
			new { @class = "form-select", id = "toxic-hazard-select", required = "required" })
	</div>
	<div class="col-md-2 mt-2 mt-md-0" >
		@Html.LabelFor(x => x.HazardCode, ContentResources.HazardCode, new { @class = "col-form-label required hide", id="hazard-code-label" })
	</div>
	<div class="col-md-4" >
		@Html.TextBoxFor(
			x => x.HazardCode,
			new { 
				@class = "form-control can-required hide",
				id="hazard-code-text",
				maxlength = FieldLengthes.ExtraExtraSmall
			})
	</div>
</div>
<div class="row">
	<div class="col-md-2 mt-2 mt-md-0">
		@Html.LabelFor(x => x.PackagingInstructions, ContentResources.PackagingInstructions, new { @class = "col-form-label required" })
	</div>
	<div class="col-md-10">
		@Html.TextAreaFor(
			x => x.PackagingInstructions,
			new {
				@class = "form-control",
				required = "required",
				maxlength = FieldLengthes.Large
			})
	</div>
</div>
<div class="row">
	<div class="col-md-2 mt-2 mt-md-0">
		@Html.LabelFor(x => x.MixingInstructions, ContentResources.MixingInstructions, new { @class = "col-form-label required" })
	</div>
	<div class="col-md-10">
		@Html.TextAreaFor(
			x => x.MixingInstructions,
			new {
				@class = "form-control",
				required = "required",
				maxlength = FieldLengthes.Large
			})
	</div>
</div>