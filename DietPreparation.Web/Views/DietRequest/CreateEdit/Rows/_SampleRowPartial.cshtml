@using DietPreparation.Common.Consts;
@using DietPreparation.Common.Enums
@using DietPreparation.Common.Extensions
@using DietPreparation.Resources

@model DietPreparation.Web.Models.DietRequests.Rows.DietRequestSample

@{
	var unitOfMeasureArray = new[]{ UnitOfMeasure.Gram, UnitOfMeasure.Kilogram, UnitOfMeasure.Pound };
	var unitOfMeasureInSelectList = unitOfMeasureArray
		.Select(x => new SelectListItem
		{
			Text = x.GetDisplayName(),
			Value = x.GetNumberAsString()
		});

	var analysisTypeArray = new[] { AnalysisType.NutrientAnalysis, AnalysisType.AntibioticScreen, AnalysisType.RetainerSample, AnalysisType.Other };
	var analysisTypeInSelectList = analysisTypeArray
		.Select(x => new SelectListItem
		{
			Text = x.GetDisplayName(),
			Value = x.GetNumberAsString()
		});
}

<td class="col-2">
	@Html.TextBoxFor(x => x.Amount,
		new {
			@class = "form-control can-required",
			type = "number",
			step = "0.001",
			minvalue =  DefaultNumbers.AmountMinValue,
			maxvalue = DefaultNumbers.AmountMaxValue,
			title = $"Format: Value should be between {DefaultNumbers.AmountMinValue} and {DefaultNumbers.AmountMaxValue}"
		})
</td>
<td class="col-2">
	@Html.DropDownListFor(x => x.UnitOfMeasure,
		unitOfMeasureInSelectList,
		ContentResources.SectionOne,
		new { @class = "form-select can-required" })
</td>
<td class="col-2">
	@Html.TextBoxFor(
		x => x.Disposition,
		new {
			@class = "form-control",
			maxlength = FieldLengthes.ExtraExtraSmall
		})
</td>
<td class="col-2">
	@Html.DropDownListFor(x => x.AnalysisType,
		analysisTypeInSelectList,
		ContentResources.SectionOne,
		new { @class = "form-select can-required" })
</td>
<td class="col-3">
	@Html.TextAreaFor(
		x => x.Comment,
		new {
			@class = "form-control",
			rows = "1",
			maxlength = FieldLengthes.Large
		})
</td>