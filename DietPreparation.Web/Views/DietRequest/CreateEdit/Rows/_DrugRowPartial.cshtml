@using DietPreparation.Common.Consts;
@using DietPreparation.Common.Enums
@using DietPreparation.Common.Extensions
@using DietPreparation.Resources
@model DietPreparation.Web.Models.DietRequests.Rows.DietRequestDrug

@{
	var unitOfMeasureArray = new[] { UnitOfMeasure.Milligram, UnitOfMeasure.Gram, UnitOfMeasure.Kilogram, UnitOfMeasure.Pound };
	var unitOfMeasureInSelectList = unitOfMeasureArray
		.Select(x => new SelectListItem
		{
			Text = x.GetDisplayName(),
			Value = x.GetNumberAsString()
		});
}

<td class="col-3">
	<select name="@Html.NameFor(x => x.DrugId)" class="form-select drug-select can-required">
		<option value="">@ContentResources.SectionOne</option>
		@if (Model.Metadata?.MetadataDrugs is not null)
		{
			foreach (var drug in Model.Metadata.MetadataDrugs)
			{
				if (Model.DrugId == drug.Id)
				{
					<option value="@drug.Id" data-concentration="@drug.ConcentrationWithUom" selected="selected">@drug.Name</option>
				}
				else
				{
					<option value="@drug.Id" data-concentration="@drug.ConcentrationWithUom">@drug.Name</option>
				}
			}
		}
	</select>
</td>
<td class="col-2">
	@Html.TextBoxFor(x => x.ConcentrationWithUom, new { @class = "form-control drug-concentration-input", @readonly = "readonly" })
</td>
<td class="col-2">
	@Html.TextBoxFor(
		x => x.Amount,
		new {
			@class = "form-control can-required",
			type = "number",
			step = "0.001",
			minvalue =  DefaultNumbers.AmountMinValue,
			maxvalue = DefaultNumbers.AmountMaxValue,
			title = $"Format: Value should be between {DefaultNumbers.AmountMinValue} and {DefaultNumbers.AmountMaxValue}"
		})
</td>
<td class="col-2">
	@Html.DropDownListFor(x => x.UnitOfMeasure,
		unitOfMeasureInSelectList,
		ContentResources.SectionOne,
		new { @class = "form-select can-required" })
</td>
<td class="col-1">
	@Html.TextBoxFor(
		x => x.MfgLot,
		new {
			@class = "form-control can-required",
			maxlength = "20"
		})
</td>
<td class="col-1">
	<div class="form-check form-switch d-flex justify-content-center align-items-end">
		@Html.CheckBoxFor(x => x.IncludedInWeight, new { @class = "form-check-input", role = "switch" })
	</div>
</td>