@using DietPreparation.Common.Consts
@using DietPreparation.Common.Enums;
@using DietPreparation.Common.Extensions;
@using DietPreparation.Web.Models.PWOs;
@using DietPreparation.Resources;
@model PwoSearchViewModel

@{
	ViewBag.Title = ContentResources.DietRequestSearch;
	var orderBy = new PwoSearchRowItem();

	var filterTypeArray = new[] { PwoFilterOptions.Open, PwoFilterOptions.Closed, PwoFilterOptions.Printed };
	var filterList = filterTypeArray
		.Select(accessType => new SelectListItem
		{
			Text = accessType.GetDisplayName(),
			Value = accessType.GetDisplayName(),
		    Selected = accessType.GetDisplayName() == Model.PreFilter,
		});
}

<div class="container">
	@await Html.PartialAsync("_PageHeaderPartial", ContentResources.ProcessWorkOrder)

	@await Html.PartialAsync("../Shared/FilterYearInfo")

	<div class="accordion pb-4" id="accordionPanelsStayOpenExample">
		<div class="accordion-item">
			<h2 class="accordion-header" id="panelsStayOpen-headingOne">
				<button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseOne" aria-expanded="true" aria-controls="panelsStayOpen-collapseOne">
					@ContentResources.Search
				</button>
			</h2>
			<div id="panelsStayOpen-collapseOne" class="px-2 accordion-collapse collapse show" aria-labelledby="panelsStayOpen-headingOne">
				<section class="search-panel">
					<div class="row pt-3">
						<div class="col-md-1">
							<label class="col-form-label">@ContentResources.Lot @ContentResources.Year</label>
						</div>
						<div class="col-md-2">
							@Html.TextBoxFor(x => x.LotYear, new { @class = "form-control", @filter="filter", placeholder = ContentResources.LotYear, id = "filter-lot-year"})
						</div>
						<div class="col-md-1">
							<label class="col-form-label">@ContentResources.Requestor</label>
						</div>
						<div class="col-md-5">
							@Html.TextBoxFor(x => x.Requestor, new { @class = "form-control", @filter="filter", placeholder = ContentResources.Requestor})
						</div>
						<div class="col-md-1">
							<label class="col-form-label">@ContentResources.Status</label>
						</div>
						<div class="col-md-2">
							@Html.DropDownListFor(x => x.Filter, filterList,new { @class = "form-select", @filter="filter" })
						</div>
					</div>
					<div class="row pt-3 pb-2">
						<div class="col-md-1">
							<label class="col-form-label">@ContentResources.Lot #</label>
						</div>
						<div class="col-md-2">
							@Html.TextBoxFor(x => x.LotNumber, new { @class = "form-control", @filter="filter", placeholder = $"{ContentResources.Lot} #", id = "filter-lot-number" })
						</div>
						<div class="col-md-1">
							<label class="col-form-label">@ContentResources.DietName</label>
						</div>
						<div class="col-md-5">
							@Html.TextBoxFor(x => x.DietName, new { @class = "form-control", @filter="filter", placeholder = ContentResources.DietName})
						</div>
						<div class="col-md-2 offset-md-1">
							<button type="button" class="btn btn-primary search-button">@ContentResources.Search</button>
						</div>
					</div>
				</section>
			</div>
		</div>
	</div>

	<section class="sortable-block pagination-block mt-3">
		<table>
			<thead>
				<tr>
					<th class="col-1 active-desc" data-sort-by="@(orderBy.GetFullName(x => x.Lot))">@ContentResources.Lot</th>
					<th class="col-2" data-sort-by="@(orderBy.GetFullName(x => x.Requestor))">@ContentResources.Requestor</th>
					<th class="col-1" data-sort-by="@(orderBy.GetFullName(x => x.DateRequest))">@ContentResources.DateOfRequest</th>
					<th class="col-5" data-sort-by="@(orderBy.GetFullName(x => x.DietName))">@ContentResources.DietName</th>
					<th class="col-1" data-sort-by="@(orderBy.GetFullName(x => x.RequestAmount))">@ContentResources.Amount</th>
					<th class="col-1" data-sort-by="@(orderBy.GetFullName(x => x.UnitOfMeasure))">@ContentResources.UnitOfMeasure</th>
					<th class="col-1">&nbsp;</th>
				</tr>
			</thead>
			<tbody>
			</tbody>
			<tfoot>
				<tr>
					<td colspan="7" class="pagination-panel">
						<nav>
							<ul class="pagination justify-content-center"></ul>
						</nav>
					</td>
				</tr>
			</tfoot>
		</table>
	</section>
</div>

@section Scripts {
	<script type="module">
		import errorMessages from '@Url.Content("~/scripts/common/error-messages.js")';
		import TableManager from '@Url.Content("~/scripts/components/table-manager.js")';
		import DisplayAlert from '@Url.Content("~/scripts/display-alert.js")';
		import InputPairedField from '@Url.Content("~/scripts/components/input-paired-field.js")';
		const displayAlert = new DisplayAlert('@DefaultNumbers.DefaultAlertsTimeoutInMs');

		function handleException(exception) {
			displayAlert.exception(exception);
		}

		function fillTable(data) {
			let $data = $('.sortable-block table tbody')
			$data.find('tr').remove();

			if (data.dietRequests && data.dietRequests.length > 0) {
				$.each(data.dietRequests, function (index, item) {
					let row = $('<tr>');
					row.attr('data-id', item.id);
					row.addClass('request-row');
					row.append('<td class="sm">' + item.lot + '</td>');
					row.append('<td class="md">' + item.requestor + '</td>');
					row.append('<td class="sm">' + item.dateRequest.split('T')[0] + '</td>');
					row.append('<td class="md"><p class="text-wrap">' + item.dietName + '</p></td>');
					row.append('<td class="lg">' + item.requestAmount.toLocaleString() + '</td>');
					row.append('<td class="sm">' + item.unitOfMeasure + '</td>');
					row.append(`<td class="sm"><a class="request-row float-end" href="@Url.Action("batchlist","pwo")?requestid=${item.id}"><i data-feather="plus-square"></i></a></td>`);
					$data.append(row);
				});
			} else {
				let row = $('<tr>');
				row.append(`<td colspan="7" align="center" class="lg">@(MessagesResources.EmptyEntityInstancesList)</td>`);
				$data.append(row);
			}

			feather.replace();
		}
		$(document).on('click', '.request-row', function () {
			let id = $(this).data('id');
			window.location.href = '@Url.Action("batchlist","pwo")' + `?requestid=${id}`;
		});

		$(document).ready(function () {
			const inputPairedField = new InputPairedField('filter-lot-year', 'filter-lot-number');

			const tableManager = new TableManager(['sortable-table', 'pagination', 'search-panel'], '@Url.Action("search-pwos-list", "pwo")', fillTable, handleException, feather);
			tableManager.loadData();
		});
	</script>
}